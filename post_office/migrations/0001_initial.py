# Generated by Django 2.2.9 on 2020-03-11 18:29

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import post_office.fields
import post_office.models
import post_office.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_email', models.CharField(default='admin@robertnclayton.net', help_text='Must have permission to send through the default server!', max_length=254, validators=[post_office.validators.validate_email_with_name], verbose_name='Email From')),
                ('to', post_office.fields.CommaSeparatedEmailField(blank=True, help_text='Optional (if no group of recipients selected), separate addresses with a comma.', verbose_name='Email To')),
                ('cc', post_office.fields.CommaSeparatedEmailField(blank=True, help_text='Optional, separate multiple addresses with a comma.', verbose_name='Email Cc')),
                ('bcc', post_office.fields.CommaSeparatedEmailField(blank=True, help_text='Optional, separate multiple addresses with a comma.', verbose_name='Email Bcc')),
                ('subject', models.CharField(blank=True, help_text='Leave this blank if sending content by a template!', max_length=989, verbose_name='Subject')),
                ('message', models.TextField(blank=True, help_text='Leave this blank if sending content by a template!', verbose_name='Text Content')),
                ('html_message', models.TextField(blank=True, help_text='Leave this blank if sending content by a template!', verbose_name='HTML Content')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'sent'), (1, 'failed'), (2, 'queued')], db_index=True, null=True, verbose_name='Status')),
                ('priority', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'low'), (1, 'medium'), (2, 'high'), (3, 'now')], null=True, verbose_name='Priority')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('scheduled_time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Scheduled sending time')),
                ('headers', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Headers')),
                ('context', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Context')),
                ('backend_alias', models.CharField(blank=True, default='', max_length=64, verbose_name='Backend alias')),
                ('group', models.ForeignKey(blank=True, help_text='Send email to all members of a group.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group', verbose_name='Send to group')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'sent'), (1, 'failed')], verbose_name='Status')),
                ('exception_type', models.CharField(blank=True, max_length=255, verbose_name='Exception type')),
                ('message', models.TextField(verbose_name='Message')),
                ('email', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='post_office.Email', verbose_name='Email address')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="ex: 'welcome_email'", max_length=255, verbose_name='Name')),
                ('description', models.CharField(blank=True, help_text='Description of this template.', max_length=255, verbose_name='Description')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(blank=True, help_text='The email subject.', max_length=255, validators=[post_office.validators.validate_template_syntax], verbose_name='Subject')),
                ('content', models.TextField(blank=True, default='\n\nClick the following link to unsubscribe from future emails: \nhttps://{{ unsubscribe }}', help_text='Plain text message for users who have HTML email disabled.', validators=[post_office.validators.validate_template_syntax], verbose_name='Text Content')),
                ('html_content', models.TextField(blank=True, default='<br /><br /><p style="text-align:center;font-size:small;">Click <a href="https://{{ unsubscribe }}">here</a> to unsubscribe from future emails.</p>', help_text='Email HTML body. Context variables available for personalisation, ex: {{ first_name }} {{ last_name }} returns Joe Smith', validators=[post_office.validators.validate_template_syntax], verbose_name='HTML Content')),
                ('language', models.CharField(blank=True, default='', help_text='Render template in alternative language', max_length=12, verbose_name='Language')),
                ('default_template', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translated_templates', to='post_office.EmailTemplate', verbose_name='Default template')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['name'],
                'unique_together': {('name', 'language', 'default_template')},
            },
        ),
        migrations.AddField(
            model_name='email',
            name='template',
            field=models.ForeignKey(blank=True, help_text='If selected, will replace subject, plain-text content, and html content with content from the chosen template.', null=True, on_delete=django.db.models.deletion.CASCADE, to='post_office.EmailTemplate', verbose_name='Email template'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=post_office.models.get_upload_path, verbose_name='File')),
                ('name', models.CharField(help_text='The template name', max_length=255, verbose_name='Name')),
                ('mimetype', models.CharField(blank=True, default='', max_length=255)),
                ('headers', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Headers')),
                ('emails', models.ManyToManyField(related_name='attachments', to='post_office.Email', verbose_name='Email addresses')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
            },
        ),
    ]
